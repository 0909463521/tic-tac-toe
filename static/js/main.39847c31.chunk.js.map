{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","style","float","paddingRight","backgroundColor","this","thaydoimau","value","React","Component","Board","createTable","Parent","i","children","j","push","renderSquare","squares","mycolor","Game","state","history","Array","fill","map","row","xIsNext","checkpeace","stepNumber","isHistorySortAscending","slice","length","arr","setState","concat","calculateWinner","tmpcolor","step","status","historyMoves","move","desc","key","jumpTo","moves","reverse","handleClick","toggleHistorySort","checkWin","currentsquare","current","dem","laymangNgang","square","col","diemdau","arrN","laymangDoc","laymangCheotrai","arrCheoTrai","originalrow","originalcol","console","log","myindex","laymangCheophai","arrCheoPhai","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39847c31.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <button className=\"square\" onClick={() => { this.props.onClick() }} style={{ float: 'left', paddingRight: '5px', backgroundColor: this.props.thaydoimau }} >\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nclass Board extends React.Component {\n\n    renderSquare(i, j) {\n        return (\n            <Square\n                value={this.props.squares[i][j]}\n                onClick={() => this.props.onClick(i, j)}\n                thaydoimau={this.props.mycolor[i][j]}\n\n            />\n        );\n    }\n    createTable = () => {\n        let Parent = []\n\n        for (let i = 0; i < 20; i++) {\n            let children = []\n\n            for (let j = 0; j < 20; j++) {\n                children.push(this.renderSquare(i, j))\n\n            }\n\n            Parent.push(<div className=\"board-row\">{children}</div>)\n\n        }\n\n        return Parent\n    }\n\n    render() {\n\n        return (\n            <div>\n                {/* <div className=\"status\">{status}</div> */}\n                {this.createTable()}\n            </div>\n        );\n    }\n}\n\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{ squares: Array(20).fill(null).map(row => new Array(20).fill(null)) }],\n            xIsNext: true,\n            mycolor: Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\")),\n            checkpeace: 0,\n\n            stepNumber: 0,\n\n            isHistorySortAscending: true,\n        };\n\n    }\n    handleClick(i, j) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.map((arr) => {\n            return arr.slice();\n        });//đây là cách copy mảng 2 chiều\n        \n        if (squares[i][j]) {\n            return;\n        }\n        squares[i][j] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares\n                }\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        });\n\n        // var checkfull= toCheckfull(this.state.squares)\n        if (calculateWinner(squares, i, j, squares[i][j]) != null) {\n            let tmpcolor = calculateWinner(squares, i, j, squares[i][j])\n             this.state.mycolor = tmpcolor\n        }\n\n    }\n\n    jumpTo(step) {\n\n\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n\n        });\n    }\n    toggleHistorySort()\n    {\n        this.state.isHistorySortAscending = !this.state.isHistorySortAscending\n        this.setState(this.state)\n    }\n    render() {\n        const {mycolor,xIsNext,history,isHistorySortAscending}=this.state\n        \n        const current = history[this.state.stepNumber];\n        const squares = current.squares.slice()\n        \n        \n        const historyMoves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n        let moves=historyMoves\n        if(!isHistorySortAscending)\n            moves=historyMoves.reverse()\n\n\n        let status;\n        status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={squares}\n                        onClick={(i, j) => this.handleClick(i, j)}\n                        mycolor={mycolor}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    \n                    <div>{ status }</div>\n                    <button onClick={()=>{this.toggleHistorySort()}}>{isHistorySortAscending===true? \"Tăng Dần\" : \"Giảm Dần\" }</button>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\n\nfunction checkWin(currentsquare, arr) {\n    let current = 0;\n    for (let i = 0; i <= (arr.length - 5); i++) {\n        let dem = 0\n        current = i\n        for (let j = i; j <= i + 4; j++) {\n\n\n            if (arr[j] === currentsquare) {\n                dem++\n            }\n            if (dem === 5) {\n\n                return current;\n\n\n            }\n        }\n\n\n    }\n    return null\n}\nfunction laymangNgang(square, row, col, currentsquare) {\n    let arrN = []\n\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\n\n    let diemdau;\n\n    for (let i = ((col - 4 < 0) ? 0 : (col - 4)); i <= ((col + 4 > 19) ? 19 : (col + 4)); i++) {\n\n        arrN.push(square[row][i]);\n    }\n    if (checkWin(currentsquare, arrN) != null) {\n        let myindex = checkWin(currentsquare, arrN)\n\n        if (col - 4 < 0) {\n            diemdau = 0\n        }\n        else {\n            diemdau = col - 4\n        }\n        diemdau = diemdau + myindex\n\n        for (let i = 0; i < 5; i++) {\n            tmpcolor[row][diemdau] = \"red\"\n            diemdau = diemdau + 1\n        }\n\n        return tmpcolor;\n    }\n    else {\n        return null;\n    }\n\n}\nfunction laymangDoc(square, row, col, currentsquare) {\n    let arrN = []\n\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\n\n    let diemdau;\n\n    for (let i = ((row - 4 < 0) ? 0 : (row - 4)); i <= ((row + 4 > 19) ? 19 : (row + 4)); i++) {\n        arrN.push(square[i][col]);\n    }\n    if (checkWin(currentsquare, arrN) != null) {\n        let myindex = checkWin(currentsquare, arrN)\n\n        if (row - 4 < 0) {\n            diemdau = 0\n        }\n        else {\n            diemdau = row - 4\n        }\n        diemdau = diemdau + myindex\n\n        for (let i = 0; i < 5; i++) {\n            tmpcolor[diemdau][col] = \"red\"\n            diemdau = diemdau + 1\n        }\n\n        return tmpcolor;\n    }\n    else {\n        return null;\n    }\n\n}\n\nfunction laymangCheotrai(square, row, col, currentsquare) {\n    let dem = 1;\n    let arrCheoTrai = [];\n    let originalrow = row;\n    let originalcol = col;\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\n\n\n\n\n    arrCheoTrai.push(square[row][col])\n    for (let i = 0; i < 4; i++) {\n        if (row === 0) {\n\n            break;\n        }\n        if (col === 0) {\n\n            break;\n        }\n\n        row = row - 1\n        col = col - 1\n        arrCheoTrai.push(square[row][col])\n    }\n    arrCheoTrai.reverse()\n\n    for (let j = 0; j < 4; j++) {\n        if (originalrow >= 20 - 1) {\n\n            break;\n        }\n        if (originalcol >= 20 - 1) {\n\n            break;\n        }\n\n        originalrow = originalrow + 1\n        originalcol = originalcol + 1\n        arrCheoTrai.push(square[originalrow][originalcol])\n    }\n    console.log(\"cheo Trai\" + arrCheoTrai)\n\n\n    if (checkWin(currentsquare, arrCheoTrai) != null) {\n        let myindex = checkWin(currentsquare, arrCheoTrai)\n\n        row = row + myindex\n        col = col + myindex\n\n\n\n        for (let i = 0; i < 5; i++) {\n            tmpcolor[row][col] = \"red\"\n            row = row + 1\n            col = col + 1\n        }\n\n        return tmpcolor;\n    }\n    else {\n        return null;\n    }\n\n}\n\nfunction laymangCheophai(square, row, col, currentsquare) {\n    let dem = 1;\n    let arrCheoPhai = [];\n    let originalrow = row;\n    let originalcol = col;\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\n\n    arrCheoPhai.push(square[row][col])\n    for (let i = 0; i < 4; i++) {\n        if (row === 0) {\n\n            break;\n        }\n        if (col >= 20 - 1) {\n\n            break;\n        }\n        dem = dem + 1\n        row = row - 1\n        col = col + 1\n        arrCheoPhai.push(square[row][col])\n    }\n    arrCheoPhai.reverse()\n\n    for (let j = 0; j < 4; j++) {\n        if (originalrow >= 20 - 1) {\n\n            break;\n        }\n        if (originalcol === 0) {\n\n            break;\n        }\n        dem = dem + 1\n        originalrow = originalrow + 1\n        originalcol = originalcol - 1\n        arrCheoPhai.push(square[originalrow][originalcol])\n    }\n    console.log(\"cheo phai: \" + arrCheoPhai)\n\n    if (checkWin(currentsquare, arrCheoPhai) != null) {\n        let myindex = checkWin(currentsquare, arrCheoPhai)\n\n        row = row + myindex\n        col = col - myindex\n\n\n\n        for (let i = 0; i < 5; i++) {\n            tmpcolor[row][col] = \"red\"\n            row = row + 1\n            col = col - 1\n        }\n\n        return tmpcolor;\n    }\n    else {\n        return null;\n    }\n\n\n\n}\n\n\nfunction calculateWinner(squares, row, col, currentsquare) {\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\n\n    if (laymangNgang(squares, row, col, currentsquare) != null) {\n        tmpcolor = (laymangNgang(squares, row, col, currentsquare))\n\n        return tmpcolor\n    }\n    if (laymangDoc(squares, row, col, currentsquare) != null) {\n        tmpcolor = (laymangDoc(squares, row, col, currentsquare))\n\n        return tmpcolor\n    }\n    if (laymangCheotrai(squares, row, col, currentsquare) != null) {\n        tmpcolor = (laymangCheotrai(squares, row, col, currentsquare))\n\n        return tmpcolor\n    }\n    if (laymangCheophai(squares, row, col, currentsquare) != null) {\n        tmpcolor = (laymangCheophai(squares, row, col, currentsquare))\n\n        return tmpcolor\n    }\n    // if(laymangDoc(squares,row,col,currentsquare)===true)\n    // {\n    //     return true;\n    // }\n    // if(laymangCheotrai(squares,row,col,currentsquare)===true)\n    // {\n    //     return true;\n    // }\n    // if(laymangCheophai(squares,row,col,currentsquare)===true)\n    // {\n    //     return true;\n    // }\n    return null;\n\n}\n\nfunction toCheckfull(mang) {\n    if (mang.length === 9) {\n        for (let tmp = 0; tmp < mang.length; tmp++) {\n            if (mang[tmp] == null) {\n                return false;\n            }\n        }\n        return true; // tất cả đều được diền hết \n    }\n\n    return false\n}\n\n\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}