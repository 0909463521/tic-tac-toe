{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","style","float","paddingRight","backgroundColor","this","thaydoimau","value","React","Component","Board","createTable","Parent","i","children","j","push","renderSquare","squares","mycolor","Game","state","history","Array","fill","map","row","xIsNext","isWin","stepNumber","isHistorySortAscending","slice","length","arr","setState","concat","calculateWinner","tmpcolor","step","alert","status","historyMoves","move","desc","key","jumpTo","moves","reverse","handleClick","toggleHistorySort","checkWin","currentsquare","current","dem","laymangNgang","square","col","diemdau","arrN","laymangDoc","laymangCheotrai","arrCheoTrai","originalrow","originalcol","console","log","myindex","laymangCheophai","arrCheoPhai","ReactDOM","render","document","getElementById"],"mappings":"oOAKMA,G,6KACQ,IAAD,OACL,OACI,4BAAQC,UAAU,SAASC,QAAS,WAAQ,EAAKC,MAAMD,WAAaE,MAAO,CAAEC,MAAO,OAAQC,aAAc,MAAOC,gBAAiBC,KAAKL,MAAMM,aACxID,KAAKL,MAAMO,W,GAJPC,IAAMC,YAUrBC,E,4MAYFC,YAAc,WAGV,IAFA,IAAIC,EAAS,GAEJC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAGzB,IAFA,IAAIC,EAAW,GAENC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAASE,KAAK,EAAKC,aAAaJ,EAAGE,IAIvCH,EAAOI,KAAK,yBAAKlB,UAAU,aAAagB,IAI5C,OAAOF,G,2DAzBEC,EAAGE,GAAI,IAAD,OACf,OACI,kBAAClB,EAAD,CACIU,MAAOF,KAAKL,MAAMkB,QAAQL,GAAGE,GAC7BhB,QAAS,kBAAM,EAAKC,MAAMD,QAAQc,EAAGE,IACrCT,WAAYD,KAAKL,MAAMmB,QAAQN,GAAGE,O,+BAyB1C,OACI,6BAEKV,KAAKM,mB,GAnCFH,IAAMC,WA0CpBW,E,kDACF,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IACDqB,MAAQ,CACTC,QAAS,CAAC,CAAEJ,QAASK,MAAM,IAAIC,KAAK,MAAMC,KAAI,SAAAC,GAAG,OAAI,IAAIH,MAAM,IAAIC,KAAK,WACxEG,SAAS,EACTR,QAASI,MAAM,IAAIC,KAAK,SAASC,KAAI,SAAAC,GAAG,OAAI,IAAIH,MAAM,IAAIC,KAAK,YAC/DI,OAAO,EAEPC,WAAY,EAEZC,wBAAwB,GAVb,E,wDAcPjB,EAAGE,GACX,IAAMO,EAAUjB,KAAKgB,MAAMC,QAAQS,MAAM,EAAG1B,KAAKgB,MAAMQ,WAAa,GAE9DX,EADUI,EAAQA,EAAQU,OAAS,GACjBd,QAAQO,KAAI,SAACQ,GACjC,OAAOA,EAAIF,WAGf,IAAIb,EAAQL,GAAGE,KAAyB,IAAnBV,KAAKgB,MAAMO,QAGhCV,EAAQL,GAAGE,GAAKV,KAAKgB,MAAMM,QAAU,IAAM,IAC3CtB,KAAK6B,SAAS,CACVZ,QAASA,EAAQa,OAAO,CACpB,CACIjB,QAASA,KAGjBW,WAAYP,EAAQU,OACpBL,SAAUtB,KAAKgB,MAAMM,UAIP,MAAfT,EAAQL,GAAGE,IAE2C,MAAjDqB,EAAgBlB,EAASL,EAAGE,EAAGG,EAAQL,GAAGE,KAAa,CACvD,IAAIsB,EAAWD,EAAgBlB,EAASL,EAAGE,EAAGG,EAAQL,GAAGE,IACxDV,KAAKgB,MAAMF,QAAUkB,EACrBhC,KAAKgB,MAAMO,OAAM,K,6BAOvBU,IACmB,IAAnBjC,KAAKgB,MAAMO,MAMdvB,KAAK6B,SAAS,CACVL,WAAYS,EACZX,QAAUW,EAAO,IAAO,IANxBC,MAAM,uD,0CAYVlC,KAAKgB,MAAMS,wBAA0BzB,KAAKgB,MAAMS,uBAChDzB,KAAK6B,SAAS7B,KAAKgB,S,+BAEb,IAsBFmB,EAtBC,SACkDnC,KAAKgB,MAArDF,EADF,EACEA,QAAQQ,EADV,EACUA,QAAQL,EADlB,EACkBA,QAAQQ,EAD1B,EAC0BA,uBAGzBZ,EADUI,EAAQjB,KAAKgB,MAAMQ,YACXX,QAAQa,QAG1BU,EAAenB,EAAQG,KAAI,SAACa,EAAMI,GACpC,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,wBAAIE,IAAKF,GACL,4BAAQ3C,QAAS,kBAAM,EAAK8C,OAAOH,KAAQC,OAInDG,EAAML,EAgBV,OAfIX,IACAgB,EAAML,EAAaM,WAMnBP,GAFkB,IAAnBnC,KAAKgB,MAAMO,MAEF,cAAgBD,EAAU,IAAM,KAI/B,iBAAmBA,EAAU,IAAM,KAK5C,yBAAK7B,UAAU,QACX,yBAAKA,UAAU,cACX,kBAACY,EAAD,CACIQ,QAASA,EACTnB,QAAS,SAACc,EAAGE,GAAJ,OAAU,EAAKiC,YAAYnC,EAAGE,IACvCI,QAASA,KAGjB,yBAAKrB,UAAU,aAEX,6BAAO0C,GACP,4BAAQzC,QAAS,WAAK,EAAKkD,uBAAgD,IAAzBnB,EAA+B,qBAAa,sBAC9F,4BAAKgB,S,GAjHNtC,IAAMC,WA4HzB,SAASyC,EAASC,EAAelB,GAE7B,IADA,IAAImB,EAAU,EACLvC,EAAI,EAAGA,GAAMoB,EAAID,OAAS,EAAInB,IAAK,CACxC,IAAIwC,EAAM,EACVD,EAAUvC,EACV,IAAK,IAAIE,EAAIF,EAAGE,GAAKF,EAAI,EAAGE,IAMxB,GAHIkB,EAAIlB,KAAOoC,GACXE,IAEQ,IAARA,EAEA,OAAOD,EAQnB,OAAO,KAEX,SAASE,EAAaC,EAAQ7B,EAAK8B,EAAKL,GAOpC,IANA,IAIIM,EAJAC,EAAO,GAEPrB,EAAWd,MAAM,IAAIC,KAAK,SAASC,KAAI,SAAAC,GAAG,OAAI,IAAIH,MAAM,IAAIC,KAAK,YAI5DX,EAAM2C,EAAM,EAAI,EAAK,EAAKA,EAAM,EAAK3C,IAAO2C,EAAM,EAAI,GAAM,GAAMA,EAAM,GAAK3C,IAElF6C,EAAK1C,KAAKuC,EAAO7B,GAAKb,IAE1B,GAAqC,MAAjCqC,EAASC,EAAeO,GAAe,CAInCD,EADAD,EAAM,EAAI,EACA,EAGAA,EAAM,EAEpBC,GARcP,EAASC,EAAeO,GAUtC,IAAK,IAAI7C,EAAI,EAAGA,EAAI,EAAGA,IACnBwB,EAASX,GAAK+B,GAAW,MACzBA,GAAoB,EAGxB,OAAOpB,EAGP,OAAO,KAIf,SAASsB,EAAWJ,EAAQ7B,EAAK8B,EAAKL,GAOlC,IANA,IAIIM,EAJAC,EAAO,GAEPrB,EAAWd,MAAM,IAAIC,KAAK,SAASC,KAAI,SAAAC,GAAG,OAAI,IAAIH,MAAM,IAAIC,KAAK,YAI5DX,EAAMa,EAAM,EAAI,EAAK,EAAKA,EAAM,EAAKb,IAAOa,EAAM,EAAI,GAAM,GAAMA,EAAM,GAAKb,IAClF6C,EAAK1C,KAAKuC,EAAO1C,GAAG2C,IAExB,GAAqC,MAAjCN,EAASC,EAAeO,GAAe,CAInCD,EADA/B,EAAM,EAAI,EACA,EAGAA,EAAM,EAEpB+B,GARcP,EAASC,EAAeO,GAUtC,IAAK,IAAI7C,EAAI,EAAGA,EAAI,EAAGA,IACnBwB,EAASoB,GAASD,GAAO,MACzBC,GAAoB,EAGxB,OAAOpB,EAGP,OAAO,KAKf,SAASuB,EAAgBL,EAAQ7B,EAAK8B,EAAKL,GACvC,IACIU,EAAc,GACdC,EAAcpC,EACdqC,EAAcP,EACdnB,EAAWd,MAAM,IAAIC,KAAK,SAASC,KAAI,SAAAC,GAAG,OAAI,IAAIH,MAAM,IAAIC,KAAK,YAKrEqC,EAAY7C,KAAKuC,EAAO7B,GAAK8B,IAC7B,IAAK,IAAI3C,EAAI,EAAGA,EAAI,GACJ,IAARa,GAIQ,IAAR8B,EALe3C,IAUnBa,GAAY,EACZ8B,GAAY,EACZK,EAAY7C,KAAKuC,EAAO7B,GAAK8B,IAEjCK,EAAYd,UAEZ,IAAK,IAAIhC,EAAI,EAAGA,EAAI,KACZ+C,GAAe,OAIfC,GAAe,IALAhD,IAUnB+C,GAA4B,EAC5BC,GAA4B,EAC5BF,EAAY7C,KAAKuC,EAAOO,GAAaC,IAKzC,GAHAC,QAAQC,IAAI,YAAcJ,GAGkB,MAAxCX,EAASC,EAAeU,GAAsB,CAC9C,IAAIK,EAAUhB,EAASC,EAAeU,GAEtCnC,GAAYwC,EACZV,GAAYU,EAIZ,IAAK,IAAIrD,EAAI,EAAGA,EAAI,EAAGA,IACnBwB,EAASX,GAAK8B,GAAO,MACrB9B,GAAY,EACZ8B,GAAY,EAGhB,OAAOnB,EAGP,OAAO,KAKf,SAAS8B,EAAgBZ,EAAQ7B,EAAK8B,EAAKL,GACvC,IACIiB,EAAc,GACdN,EAAcpC,EACdqC,EAAcP,EACdnB,EAAWd,MAAM,IAAIC,KAAK,SAASC,KAAI,SAAAC,GAAG,OAAI,IAAIH,MAAM,IAAIC,KAAK,YAErE4C,EAAYpD,KAAKuC,EAAO7B,GAAK8B,IAC7B,IAAK,IAAI3C,EAAI,EAAGA,EAAI,GACJ,IAARa,KAIA8B,GAAO,IALQ3C,IASP,EACZa,GAAY,EACZ8B,GAAY,EACZY,EAAYpD,KAAKuC,EAAO7B,GAAK8B,IAEjCY,EAAYrB,UAEZ,IAAK,IAAIhC,EAAI,EAAGA,EAAI,KACZ+C,GAAe,KAIC,IAAhBC,EALehD,IASP,EACZ+C,GAA4B,EAC5BC,GAA4B,EAC5BK,EAAYpD,KAAKuC,EAAOO,GAAaC,IAIzC,GAFAC,QAAQC,IAAI,cAAgBG,GAEgB,MAAxClB,EAASC,EAAeiB,GAAsB,CAC9C,IAAIF,EAAUhB,EAASC,EAAeiB,GAEtC1C,GAAYwC,EACZV,GAAYU,EAIZ,IAAK,IAAIrD,EAAI,EAAGA,EAAI,EAAGA,IACnBwB,EAASX,GAAK8B,GAAO,MACrB9B,GAAY,EACZ8B,GAAY,EAGhB,OAAOnB,EAGP,OAAO,KAQf,SAASD,EAAgBlB,EAASQ,EAAK8B,EAAKL,GACzB5B,MAAM,IAAIC,KAAK,SAASC,KAAI,SAAAC,GAAG,OAAI,IAAIH,MAAM,IAAIC,KAAK,YAErE,OAAsD,MAAlD8B,EAAapC,EAASQ,EAAK8B,EAAKL,GACpBG,EAAapC,EAASQ,EAAK8B,EAAKL,GAII,MAAhDQ,EAAWzC,EAASQ,EAAK8B,EAAKL,GAClBQ,EAAWzC,EAASQ,EAAK8B,EAAKL,GAIW,MAArDS,EAAgB1C,EAASQ,EAAK8B,EAAKL,GACvBS,EAAgB1C,EAASQ,EAAK8B,EAAKL,GAIM,MAArDgB,EAAgBjD,EAASQ,EAAK8B,EAAKL,GACvBgB,EAAgBjD,EAASQ,EAAK8B,EAAKL,GAgB5C,KAqBXkB,IAASC,OACL,kBAAClD,EAAD,MACAmD,SAASC,eAAe,W","file":"static/js/main.8b011352.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nclass Square extends React.Component {\r\n    render() {\r\n        return (\r\n            <button className=\"square\" onClick={() => { this.props.onClick() }} style={{ float: 'left', paddingRight: '5px', backgroundColor: this.props.thaydoimau }} >\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderSquare(i, j) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i][j]}\r\n                onClick={() => this.props.onClick(i, j)}\r\n                thaydoimau={this.props.mycolor[i][j]}\r\n\r\n            />\r\n        );\r\n    }\r\n    createTable = () => {\r\n        let Parent = []\r\n\r\n        for (let i = 0; i < 20; i++) {\r\n            let children = []\r\n\r\n            for (let j = 0; j < 20; j++) {\r\n                children.push(this.renderSquare(i, j))\r\n\r\n            }\r\n\r\n            Parent.push(<div className=\"board-row\">{children}</div>)\r\n\r\n        }\r\n\r\n        return Parent\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/* <div className=\"status\">{status}</div> */}\r\n                {this.createTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{ squares: Array(20).fill(null).map(row => new Array(20).fill(null)) }],\r\n            xIsNext: true,\r\n            mycolor: Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\")),\r\n            isWin: false,\r\n\r\n            stepNumber: 0,\r\n\r\n            isHistorySortAscending: true,\r\n        };\r\n\r\n    }\r\n    handleClick(i, j) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.map((arr) => {\r\n            return arr.slice();\r\n        });\r\n        \r\n        if (squares[i][j] || this.state.isWin===true ) {\r\n            return;\r\n        }\r\n        squares[i][j] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n            history: history.concat([\r\n                {\r\n                    squares: squares\r\n                }\r\n            ]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n\r\n        // var checkfull= toCheckfull(this.state.squares)\r\n        if(squares[i][j]!=null)\r\n        {\r\n            if (calculateWinner(squares, i, j, squares[i][j]) != null) {\r\n                let tmpcolor = calculateWinner(squares, i, j, squares[i][j])\r\n                 this.state.mycolor = tmpcolor\r\n                 this.state.isWin=true;\r\n            }                \r\n        }\r\n       \r\n\r\n    }\r\n\r\n    jumpTo(step) {\r\n        if(this.state.isWin===true)\r\n        {\r\n            alert(\"đã Win không thể đi lại\")\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n\r\n        });\r\n    }\r\n    toggleHistorySort()\r\n    {\r\n        this.state.isHistorySortAscending = !this.state.isHistorySortAscending\r\n        this.setState(this.state)\r\n    }\r\n    render() {\r\n        const {mycolor,xIsNext,history,isHistorySortAscending}=this.state\r\n        \r\n        const current = history[this.state.stepNumber];\r\n        const squares = current.squares.slice()\r\n        \r\n        \r\n        const historyMoves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n        let moves=historyMoves\r\n        if(!isHistorySortAscending)\r\n            moves=historyMoves.reverse()\r\n\r\n\r\n        let status;\r\n        if(this.state.isWin===true)\r\n        {\r\n            status =\"WINNER IS \" + (xIsNext ? \"O\" : \"X\");\r\n        }\r\n        else\r\n        {\r\n            status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n        }\r\n       \r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={squares}\r\n                        onClick={(i, j) => this.handleClick(i, j)}\r\n                        mycolor={mycolor}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    \r\n                    <div>{ status }</div>\r\n                    <button onClick={()=>{this.toggleHistorySort()}}>{isHistorySortAscending===true? \"Tăng Dần\" : \"Giảm Dần\" }</button>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction checkWin(currentsquare, arr) {\r\n    let current = 0;\r\n    for (let i = 0; i <= (arr.length - 5); i++) {\r\n        let dem = 0\r\n        current = i\r\n        for (let j = i; j <= i + 4; j++) {\r\n\r\n\r\n            if (arr[j] === currentsquare) {\r\n                dem++\r\n            }\r\n            if (dem === 5) {\r\n\r\n                return current;\r\n\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    return null\r\n}\r\nfunction laymangNgang(square, row, col, currentsquare) {\r\n    let arrN = []\r\n\r\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\r\n\r\n    let diemdau;\r\n\r\n    for (let i = ((col - 4 < 0) ? 0 : (col - 4)); i <= ((col + 4 > 19) ? 19 : (col + 4)); i++) {\r\n\r\n        arrN.push(square[row][i]);\r\n    }\r\n    if (checkWin(currentsquare, arrN) != null) {\r\n        let myindex = checkWin(currentsquare, arrN)\r\n\r\n        if (col - 4 < 0) {\r\n            diemdau = 0\r\n        }\r\n        else {\r\n            diemdau = col - 4\r\n        }\r\n        diemdau = diemdau + myindex\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            tmpcolor[row][diemdau] = \"red\"\r\n            diemdau = diemdau + 1\r\n        }\r\n\r\n        return tmpcolor;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n\r\n}\r\nfunction laymangDoc(square, row, col, currentsquare) {\r\n    let arrN = []\r\n\r\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\r\n\r\n    let diemdau;\r\n\r\n    for (let i = ((row - 4 < 0) ? 0 : (row - 4)); i <= ((row + 4 > 19) ? 19 : (row + 4)); i++) {\r\n        arrN.push(square[i][col]);\r\n    }\r\n    if (checkWin(currentsquare, arrN) != null) {\r\n        let myindex = checkWin(currentsquare, arrN)\r\n\r\n        if (row - 4 < 0) {\r\n            diemdau = 0\r\n        }\r\n        else {\r\n            diemdau = row - 4\r\n        }\r\n        diemdau = diemdau + myindex\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            tmpcolor[diemdau][col] = \"red\"\r\n            diemdau = diemdau + 1\r\n        }\r\n\r\n        return tmpcolor;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nfunction laymangCheotrai(square, row, col, currentsquare) {\r\n    let dem = 1;\r\n    let arrCheoTrai = [];\r\n    let originalrow = row;\r\n    let originalcol = col;\r\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\r\n\r\n\r\n\r\n\r\n    arrCheoTrai.push(square[row][col])\r\n    for (let i = 0; i < 4; i++) {\r\n        if (row === 0) {\r\n\r\n            break;\r\n        }\r\n        if (col === 0) {\r\n\r\n            break;\r\n        }\r\n\r\n        row = row - 1\r\n        col = col - 1\r\n        arrCheoTrai.push(square[row][col])\r\n    }\r\n    arrCheoTrai.reverse()\r\n\r\n    for (let j = 0; j < 4; j++) {\r\n        if (originalrow >= 20 - 1) {\r\n\r\n            break;\r\n        }\r\n        if (originalcol >= 20 - 1) {\r\n\r\n            break;\r\n        }\r\n\r\n        originalrow = originalrow + 1\r\n        originalcol = originalcol + 1\r\n        arrCheoTrai.push(square[originalrow][originalcol])\r\n    }\r\n    console.log(\"cheo Trai\" + arrCheoTrai)\r\n\r\n\r\n    if (checkWin(currentsquare, arrCheoTrai) != null) {\r\n        let myindex = checkWin(currentsquare, arrCheoTrai)\r\n\r\n        row = row + myindex\r\n        col = col + myindex\r\n\r\n\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            tmpcolor[row][col] = \"red\"\r\n            row = row + 1\r\n            col = col + 1\r\n        }\r\n\r\n        return tmpcolor;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nfunction laymangCheophai(square, row, col, currentsquare) {\r\n    let dem = 1;\r\n    let arrCheoPhai = [];\r\n    let originalrow = row;\r\n    let originalcol = col;\r\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\r\n\r\n    arrCheoPhai.push(square[row][col])\r\n    for (let i = 0; i < 4; i++) {\r\n        if (row === 0) {\r\n\r\n            break;\r\n        }\r\n        if (col >= 20 - 1) {\r\n\r\n            break;\r\n        }\r\n        dem = dem + 1\r\n        row = row - 1\r\n        col = col + 1\r\n        arrCheoPhai.push(square[row][col])\r\n    }\r\n    arrCheoPhai.reverse()\r\n\r\n    for (let j = 0; j < 4; j++) {\r\n        if (originalrow >= 20 - 1) {\r\n\r\n            break;\r\n        }\r\n        if (originalcol === 0) {\r\n\r\n            break;\r\n        }\r\n        dem = dem + 1\r\n        originalrow = originalrow + 1\r\n        originalcol = originalcol - 1\r\n        arrCheoPhai.push(square[originalrow][originalcol])\r\n    }\r\n    console.log(\"cheo phai: \" + arrCheoPhai)\r\n\r\n    if (checkWin(currentsquare, arrCheoPhai) != null) {\r\n        let myindex = checkWin(currentsquare, arrCheoPhai)\r\n\r\n        row = row + myindex\r\n        col = col - myindex\r\n\r\n\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            tmpcolor[row][col] = \"red\"\r\n            row = row + 1\r\n            col = col - 1\r\n        }\r\n\r\n        return tmpcolor;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nfunction calculateWinner(squares, row, col, currentsquare) {\r\n    let tmpcolor = Array(20).fill(\"white\").map(row => new Array(20).fill(\"white\"));\r\n\r\n    if (laymangNgang(squares, row, col, currentsquare) != null) {\r\n        tmpcolor = (laymangNgang(squares, row, col, currentsquare))\r\n\r\n        return tmpcolor\r\n    }\r\n    if (laymangDoc(squares, row, col, currentsquare) != null) {\r\n        tmpcolor = (laymangDoc(squares, row, col, currentsquare))\r\n\r\n        return tmpcolor\r\n    }\r\n    if (laymangCheotrai(squares, row, col, currentsquare) != null) {\r\n        tmpcolor = (laymangCheotrai(squares, row, col, currentsquare))\r\n\r\n        return tmpcolor\r\n    }\r\n    if (laymangCheophai(squares, row, col, currentsquare) != null) {\r\n        tmpcolor = (laymangCheophai(squares, row, col, currentsquare))\r\n\r\n        return tmpcolor\r\n    }\r\n    // if(laymangDoc(squares,row,col,currentsquare)===true)\r\n    // {\r\n    //     return true;\r\n    // }\r\n    // if(laymangCheotrai(squares,row,col,currentsquare)===true)\r\n    // {\r\n    //     return true;\r\n    // }\r\n    // if(laymangCheophai(squares,row,col,currentsquare)===true)\r\n    // {\r\n    //     return true;\r\n    // }\r\n    return null;\r\n\r\n}\r\n\r\nfunction toCheckfull(mang) {\r\n    if (mang.length === 9) {\r\n        for (let tmp = 0; tmp < mang.length; tmp++) {\r\n            if (mang[tmp] == null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true; // tất cả đều được diền hết \r\n    }\r\n\r\n    return false\r\n}\r\n\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}